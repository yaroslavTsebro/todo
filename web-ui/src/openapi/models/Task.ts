// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * API Documentation
 * API endpoints and details
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TaskList } from './TaskList';
import {
    TaskListFromJSON,
    TaskListFromJSONTyped,
    TaskListToJSON,
} from './TaskList';

/**
 * 
 * @export
 * @interface Task
 */
export interface Task {
    /**
     * Task ID
     * @type {number}
     * @memberof Task
     */
    id: number;
    /**
     * Task title
     * @type {string}
     * @memberof Task
     */
    title: string;
    /**
     * Task description
     * @type {string}
     * @memberof Task
     */
    description: string | null;
    /**
     * Associated task list
     * @type {TaskList}
     * @memberof Task
     */
    taskList: TaskList;
    /**
     * Task status
     * @type {string}
     * @memberof Task
     */
    status: TaskStatusEnum;
    /**
     * Creation date
     * @type {Date}
     * @memberof Task
     */
    createdAt: Date;
    /**
     * Last update date
     * @type {Date}
     * @memberof Task
     */
    updatedAt: Date | null;
}


/**
 * @export
 */
export const TaskStatusEnum = {
    NotDone: 'NOT_DONE',
    Done: 'DONE'
} as const;
export type TaskStatusEnum = typeof TaskStatusEnum[keyof typeof TaskStatusEnum];


/**
 * Check if a given object implements the Task interface.
 */
export function instanceOfTask(value: object): value is Task {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('taskList' in value) || value['taskList'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function TaskFromJSON(json: any): Task {
    return TaskFromJSONTyped(json, false);
}

export function TaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): Task {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'description': json['description'],
        'taskList': TaskListFromJSON(json['taskList']),
        'status': json['status'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (json['updatedAt'] == null ? null : new Date(json['updatedAt'])),
    };
}

export function TaskToJSON(value?: Task | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'title': value['title'],
        'description': value['description'],
        'taskList': TaskListToJSON(value['taskList']),
        'status': value['status'],
        'createdAt': ((value['createdAt']).toISOString()),
        'updatedAt': (value['updatedAt'] == null ? null : (value['updatedAt'] as any).toISOString()),
    };
}

